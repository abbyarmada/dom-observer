(function(global,factory){if(typeof define==="function"&&define.amd){define(["module","exports"],factory)}else if(typeof exports!=="undefined"){factory(module,exports)}else{var mod={exports:{}};factory(mod,mod.exports);global.domObserver=mod.exports}})(this,function(module,exports){"use strict";Object.defineProperty(exports,"__esModule",{value:true});/**
   * dom-observer v1.0.0
   * https://github.com/jstoolkit/dom-observer
   * @license MIT LICENSE
   * @author Matheus R. Kautzmann
   */
var makeObserver=function makeObserver(target,callback){var options=arguments.length>2&&arguments[2]!==undefined?arguments[2]:{};var _options$onlyLastChan=options.onlyLastChange,onlyLastChange=_options$onlyLastChan===undefined?false:_options$onlyLastChan,_options$onlyFirstCha=options.onlyFirstChange,onlyFirstChange=_options$onlyFirstCha===undefined?false:_options$onlyFirstCha;var MutationObserver=window.MutationObserver||window.WebKitMutationObserver||window.MozMutationObserver;var self=void 0;var currentCallback=callback;var mutationHandler=function mutationHandler(_mutations){if(onlyFirstChange){self.wipe();self.disconnect();return currentCallback(_mutations)}if(onlyLastChange)return currentCallback(_mutations.pop());return currentCallback(_mutations)};var observer=new MutationObserver(mutationHandler);function observe(_target,_options){var config=_options;var attributes=config.attributes,childList=config.childList,characterData=config.characterData;if(!(attributes||childList||characterData)){config.attributes=true;config.childList=true;config.characterData=true}if(!(_target instanceof HTMLElement)){throw new Error("You must set a target element!")}if(currentCallback){observer.observe(_target,config)}}self=function(){observe(target,options);return{addTarget:function addTarget(_target){observe(_target,options);return self},andObserve:function andObserve(_target,_options){observe(_target,_options);return self},set callback(_fn){currentCallback=_fn;return self},get callback(){return currentCallback},takeRecords:function takeRecords(){return observer.takeRecords()},wipe:function wipe(){observer.takeRecords();return self},disconnect:function disconnect(){observer.disconnect();return self}}}();return self};exports.default=makeObserver;module.exports=exports["default"]});